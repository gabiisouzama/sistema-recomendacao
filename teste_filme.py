# -*- coding: utf-8 -*-
"""teste_filme

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bi3JP5ftHDbt4ZT1fqmzXbKv56rNz3wC
"""

import numpy as np
from sklearn.cluster import KMeans
movie_ratings = np.array([
    [1, 0, 0, 1],
    [1, 1, 0, 0],
    [0, 1, 1, 0],
    [0, 0, 1, 1],
    [1, 0, 1, 0],
    [0, 1, 0, 1]
])

#treinar modelo
#numero de clusters(grupos)
num_clusters = 2

#inicializando modelo
kmeans = KMeans(n_clusters=num_clusters,
                random_state=0,n_init=10)

#treinando modelo
kmeans.fit(movie_ratings)

#classificando os usuarios
grupos_indice = kmeans.predict(movie_ratings)

#exibir dados
print("Usuário pertence ao seguinte grupo:")
for i, cluster in enumerate(grupos_indice):
  print(f"Usuário {i+1} pertence ao grupo {cluster+1}")

print("\nFilmes assistidos:")
for i in range(len(movie_ratings)):
  assistidos = np.where(movie_ratings[i]==1)[0] +1
  print(f"Usuário {i+1} assitiu aos filmes: {assistidos}")

#função que recomenda filmes
  def recomendar_filmes(filmes, filmes_assistidos, grupos_indice):
    filmes= np.array(filmes)

    usuario_id = len(filmes_assistidos)
    grupo_usuario = kmeans.predict([filmes]) [0]

    usuarios_no_mesmo_grupo = [i for i in range(len(grupos_indice))
    if grupos_indice[i]== grupo_usuario]

    filmes_recomendados = set()
    for usuario in usuarios_no_mesmo_grupo:
      filmes_assistidos_usuario = np.where(filmes_assistidos[usuario]== 1)[0]
      filmes_recomendados.update(filmes_assistidos_usuario)


    filmes_recomendados = filmes_recomendados - set(np.where(filmes == 1)[0])

    filmes_recomendados = [filme + 1 for filme in filmes_recomendados]

    return sorted(filmes_recomendados)

filmes_assistidos_usuario = [1, 0, 1, 0]
filmes_recomendados = recomendar_filmes(filmes_assistidos_usuario,
                                        movie_ratings, grupos_indice)

print(f"\nFilmes recomemdados: {filmes_recomendados}")